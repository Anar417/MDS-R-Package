% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mds.R
\name{mds}
\alias{mds}
\title{Metric Multidimensional Scaling (MDS) / Principal Coordinate Analysis (PCoA)}
\usage{
mds(data, k = 2, distance_method = "euclidean")
}
\arguments{
\item{data}{A numeric matrix or data frame. The data will be standardized and transposed before the MDS is performed.}

\item{k}{An integer specifying the number of dimensions for the MDS solution. Defaults to 2, which generates a 2D plot.}

\item{distance_method}{A string specifying the distance metric to be used for calculating the distance matrix. This can be any method out of "euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski". Defaults to "euclidean".}
}
\value{
A list "result" with two elements:
\item{1}{A numeric matrix of MDS coordinates, where each row corresponds to a sample and each column corresponds to a dimension in the reduced space.}
\item{2}{A ggplot2 object representing a 2D MDS plot, where samples are plotted based on their MDS coordinates. The plot also includes the percentage of variation explained by each axis.}
}
\description{
This function performs metric multidimensional scaling (MDS), also known as principal coordinate analysis (PCoA), on a given dataset and returns the MDS coordinates along with a 2D MDS plot using the first 2 axis of coordinates. The MDS technique reduces the dimensionality of the data while preserving the pairwise distances between samples as much as possible.
}
\details{
The function first standardizes and transposes the input data matrix. It then calculates a distance matrix using the specified distance method, converts this distance matrix into a squared distance matrix, and applies double-centering to it. An eigen decomposition is performed on the centered matrix, and the top k eigenvectors and eigenvalues are used to compute the MDS coordinates.

The MDS plot generated by using ggplot2 and displays the samples on a 2D plane, with the axes representing the first two MDS dimensions. The axes are labeled with the percentage of variation each dimension captures.
}
\examples{
example_data <- data.frame(
Var1 = c(1.2, 3.5, 4.8, 6.1, 5.7),
Var2 = c(2.1, 3.9, 4.4, 5.6, 5.2),
Var3 = c(1.9, 3.2, 4.1, 5.8, 5.3)
)
mds(example_data)

mds(matrix(rnorm(100), nrow = 10), distance_method = "manhattan")

data(iris)
mds_result <- mds(iris[, 1:4])
head(mds_result[[1]])
print(mds_result[[2]])

}
